"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[915],{5750:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new RelayClient instance","params":[{"name":"GUID","desc":"The unique identifier for the RelayClient instance","lua_type":"string | Instance"},{"name":"module","desc":"The table of functions the server will be communicating with","lua_type":"RelayModule"}],"returns":[{"desc":"","lua_type":"RelayClient"}],"function_type":"static","source":{"line":35,"path":"src/Relay/RelayClient.lua"}},{"name":"getServerChangedSignal","desc":"Retrieves and/or creates a Signal that is fired whenever the server changes any values on the client","params":[{"name":"key","desc":"The value to listen to, should it be changed by the server","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Signal"}],"function_type":"method","source":{"line":87,"path":"src/Relay/RelayClient.lua"}},{"name":"fire","desc":"Communicates to the server using the given method and parameters (...)","params":[{"name":"method","desc":"The method to call","lua_type":"string"},{"name":"...","desc":"The parameters to call the method with","lua_type":"any?"}],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","source":{"line":103,"path":"src/Relay/RelayClient.lua"}},{"name":"fetchAsync","desc":"Fetches the returned server method function value with the given parameters","params":[{"name":"method","desc":"","lua_type":"string The method to call"},{"name":"...","desc":"","lua_type":"any? The parameters to call the method with"}],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","source":{"line":115,"path":"src/Relay/RelayClient.lua"}},{"name":"postDataAsync","desc":"Sends a request to the server to update a value at a specified path.","params":[{"name":"path","desc":"The dot-separated path indicating where to set the value on the server","lua_type":"string"},{"name":"value","desc":"The new value to assign at the specified path","lua_type":"any"}],"returns":[],"function_type":"method","source":{"line":126,"path":"src/Relay/RelayClient.lua"}},{"name":"destroy","desc":"Destoys the RelayClient","params":[],"returns":[{"desc":"","lua_type":"()"}],"function_type":"method","source":{"line":138,"path":"src/Relay/RelayClient.lua"}}],"properties":[],"types":[],"name":"RelayClient","desc":"RelayClient simplifies the usage of client-sided communication via establishing networking requests in service/module format.\\nInspired by leifstout","source":{"line":14,"path":"src/Relay/RelayClient.lua"}}')}}]);