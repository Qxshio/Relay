{"searchDocs":[{"title":"RelayUtil","type":0,"sectionRef":"#","url":"/Relay/api/RelayUtil","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RelayUtil","url":"/Relay/api/RelayUtil#functions","content":" ","version":null,"tagName":"h2"},{"title":"getIndexValueFromString​","type":1,"pageTitle":"RelayUtil","url":"/Relay/api/RelayUtil#getIndexValueFromString","content":"&lt;/&gt; RelayUtil:getIndexValueFromString( stringPath: string,-- A dot-separated string representing the path to traverse (e.g., &quot;A.B.C&quot;) module: {}-- The root module or table to start the traversal from ) → {}?-- The index at the end of the stringPath Traverses a nested module/table structure using a dot-separated string path. Given a string like &quot;Player.Inventory.Weapons&quot; and a root module table, this function walks the path and returns the final table before the last key, along with the last key as a string. Useful for dynamically accessing nested module properties based on a string input. ","version":null,"tagName":"h3"},{"title":"RelayClient","type":0,"sectionRef":"#","url":"/Relay/api/RelayClient","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#new","content":"&lt;/&gt; RelayClient.new( GUID: string | Instance ,-- The unique identifier for the RelayClient instance module: RelayModule-- The table of functions the server will be communicating with ) → RelayClient Constructs a new RelayClient instance  ","version":null,"tagName":"h3"},{"title":"getServerChangedSignal​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#getServerChangedSignal","content":"&lt;/&gt; RelayClient:getServerChangedSignal( key: string-- The value to listen to, should it be changed by the server ) → Signal Retrieves and/or creates a Signal that is fired whenever the server changes any values on the client  ","version":null,"tagName":"h3"},{"title":"fire​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#fire","content":"&lt;/&gt; RelayClient:fire( method: string,-- The method to call ...: any?-- The parameters to call the method with ) → () Communicates to the server using the given method and parameters (...)  ","version":null,"tagName":"h3"},{"title":"fetchAsync​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#fetchAsync","content":"&lt;/&gt; RelayClient:fetchAsync( method: stringThemethodtocall, ...: any?Theparameterstocallthemethodwith ) → () Fetches the returned server method function value with the given parameters  ","version":null,"tagName":"h3"},{"title":"postDataAsync​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#postDataAsync","content":"&lt;/&gt; RelayClient:postDataAsync( path: string,-- The dot-separated path indicating where to set the value on the server value: any-- The new value to assign at the specified path ) → () Sends a request to the server to update a value at a specified path.  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"RelayClient","url":"/Relay/api/RelayClient#destroy","content":"&lt;/&gt; RelayClient:destroy() → () Destoys the RelayClient ","version":null,"tagName":"h3"},{"title":"RelayServer","type":0,"sectionRef":"#","url":"/Relay/api/RelayServer","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#new","content":"&lt;/&gt; RelayServer.new( GUID: string | Instance ,-- The unique identifier for the RelayServer instance Module: RelayModule,-- The table of functions the client will be communicating with Whitelist: RelayWhitelist?,-- The methods that the client is allowed to call Blacklist: {}? ) → RelayServer Constructs a new RelayServer instance  ","version":null,"tagName":"h3"},{"title":"propertyChangeAllowed​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#propertyChangeAllowed","content":"&lt;/&gt; RelayServer:propertyChangeAllowed( stringPath: string,-- The dot-separated string path to check Whitelist: {}-- An array of string patterns to match against ) → boolean?-- Returns true if the path is allowed, false otherwise; returns nil if the whitelist is not provided Determines if a property change is allowed based on a whitelist of string patterns. This function checks whether a given stringPath matches any of the patterns in the provided whitelist/blacklist. Patterns may include wildcards (*) to allow for flexible matching, e.g., &quot;Player.*.Health&quot;.  ","version":null,"tagName":"h3"},{"title":"setValueFromStringIndex​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#setValueFromStringIndex","content":"&lt;/&gt; RelayServer:setValueFromStringIndex( Player: Player ,-- The player attempting to set the value (used for integrity flagging) module: table,-- The root table to navigate and update Whitelist: table?,-- Optional list of allowed path patterns to restrict access ...: any-- Additional arguments where the first is stringPath (dot-separated string path), and second is value to set ) → () Sets a value in a nested table structure using a dot-separated string path. This function navigates through the given module table according to stringPath, and sets the specified value at the targeted key. It optionally checks against a Whitelist of allowed path patterns to restrict which paths can be modified. If RelayServer._referentialIntegrityFlag is defined, it performs a type check to ensure the new value matches the existing value’s type, and triggers the flag function with the Player as argument if the types differ.  ","version":null,"tagName":"h3"},{"title":"enforceReferentialIntegrity​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#enforceReferentialIntegrity","content":"&lt;/&gt; RelayServer:enforceReferentialIntegrity( Callback: (Player ) → ()-- A function called with the Player when a type mismatch occurs ) → () Sets a callback function to enforce referential integrity during value assignment. When a value is set via setValueFromStringIndex, this callback is invoked if the new value's type does not match the existing value's type at the target path.  ","version":null,"tagName":"h3"},{"title":"fire​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#fire","content":"&lt;/&gt; RelayServer:fire( players: PlayerGroup,-- The players to include in the setting method: string,-- The method to call ...: any?-- The parameters to call the method with ) → () Communicates to the provided client(s) using the given method and parameters (...)  ","version":null,"tagName":"h3"},{"title":"fireAll​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#fireAll","content":"&lt;/&gt; RelayServer:fireAll( method: string,-- The method to call ...: any?-- The parameters to call the method with ) → () Communicates to all clients using the given method and parameters (...)  ","version":null,"tagName":"h3"},{"title":"fireAllExcept​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#fireAllExcept","content":"&lt;/&gt; RelayServer:fireAllExcept( players: PlayerGroup,-- The players to exclude in the setting method: string,-- The method to call ...: any?-- The parameters to call the method with ) → () Communicates to all clients except the players provided using the given method and parameters (...)  ","version":null,"tagName":"h3"},{"title":"set​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#set","content":"&lt;/&gt; RelayServer:set( players: PlayerGroup,-- The players to include in the setting stringPath: string,-- The name of the value that will be set value: any?-- The value to set index to ) → () Sets a value for all provided players  ","version":null,"tagName":"h3"},{"title":"setAll​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#setAll","content":"&lt;/&gt; RelayServer:setAll( stringPath: string,-- The name of the value that will be set value: any?-- The value to set index to ) → () Sets a value for all players  ","version":null,"tagName":"h3"},{"title":"setAllExcept​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#setAllExcept","content":"&lt;/&gt; RelayServer:setAllExcept( players: PlayerGroup,-- The players to exclude from the setting stringPath: string,-- The name of the value that will be set value: any?-- The value to set index to ) → () Sets a value for all players except the provided players  ","version":null,"tagName":"h3"},{"title":"destroy​","type":1,"pageTitle":"RelayServer","url":"/Relay/api/RelayServer#destroy","content":"&lt;/&gt; RelayServer:destroy() → () Destroys the RelayServer ","version":null,"tagName":"h3"}],"options":{"id":"default"}}